// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Chalk = require("chalk");

function colorify(color, text) {
  switch (color) {
    case 0 : 
        return Curry._1(Chalk.reset, text);
    case 1 : 
        return Curry._1(Chalk.bold, text);
    case 2 : 
        return Curry._1(Chalk.dim, text);
    case 3 : 
        return Curry._1(Chalk.italic, text);
    case 4 : 
        return Curry._1(Chalk.underline, text);
    case 5 : 
        return Curry._1(Chalk.inverse, text);
    case 6 : 
        return Curry._1(Chalk.hidden, text);
    case 7 : 
        return Curry._1(Chalk.strikethrough, text);
    case 8 : 
        return Curry._1(Chalk.visible, text);
    case 9 : 
        return Curry._1(Chalk.black, text);
    case 10 : 
        return Curry._1(Chalk.red, text);
    case 11 : 
        return Curry._1(Chalk.green, text);
    case 12 : 
        return Curry._1(Chalk.yellow, text);
    case 13 : 
        return Curry._1(Chalk.blue, text);
    case 14 : 
        return Curry._1(Chalk.magenta, text);
    case 15 : 
        return Curry._1(Chalk.cyan, text);
    case 16 : 
        return Curry._1(Chalk.white, text);
    case 17 : 
        return Curry._1(Chalk.gray, text);
    case 18 : 
        return Curry._1(Chalk.redBright, text);
    case 19 : 
        return Curry._1(Chalk.greenBright, text);
    case 20 : 
        return Curry._1(Chalk.yellowBright, text);
    case 21 : 
        return Curry._1(Chalk.blueBright, text);
    case 22 : 
        return Curry._1(Chalk.magentaBright, text);
    case 23 : 
        return Curry._1(Chalk.cyanBright, text);
    case 24 : 
        return Curry._1(Chalk.whiteBright, text);
    case 25 : 
        return Curry._1(Chalk.bgBlack, text);
    case 26 : 
        return Curry._1(Chalk.bgRed, text);
    case 27 : 
        return Curry._1(Chalk.bgGreen, text);
    case 28 : 
        return Curry._1(Chalk.bgYellow, text);
    case 29 : 
        return Curry._1(Chalk.bgBlue, text);
    case 30 : 
        return Curry._1(Chalk.bgMagenta, text);
    case 31 : 
        return Curry._1(Chalk.bgCyan, text);
    case 32 : 
        return Curry._1(Chalk.bgWhite, text);
    case 33 : 
        return Curry._1(Chalk.bgBlackBright, text);
    case 34 : 
        return Curry._1(Chalk.bgRedBright, text);
    case 35 : 
        return Curry._1(Chalk.bgGreenBright, text);
    case 36 : 
        return Curry._1(Chalk.bgYellowBright, text);
    case 37 : 
        return Curry._1(Chalk.bgBlueBright, text);
    case 38 : 
        return Curry._1(Chalk.bgMagentaBright, text);
    case 39 : 
        return Curry._1(Chalk.bgCyanBright, text);
    case 40 : 
        return Curry._1(Chalk.bgWhiteBright, text);
    
  }
}

function stringToColor(t) {
  switch (t) {
    case "bgBlack" : 
        return /* BgBlack */25;
    case "bgBlackBright" : 
        return /* BgBlackBright */33;
    case "bgBlue" : 
        return /* BgBlue */29;
    case "bgBlueBright" : 
        return /* BgBlueBright */37;
    case "bgCyan" : 
        return /* BgCyan */31;
    case "bgCyanBright" : 
        return /* BgCyanBright */39;
    case "bgGreen" : 
        return /* BgGreen */27;
    case "bgGreenBright" : 
        return /* BgGreenBright */35;
    case "bgMagenta" : 
        return /* BgMagenta */30;
    case "bgMagentaBright" : 
        return /* BgMagentaBright */38;
    case "bgRed" : 
        return /* BgRed */26;
    case "bgRedBright" : 
        return /* BgRedBright */34;
    case "bgWhite" : 
        return /* BgWhite */32;
    case "bgWhiteBright" : 
        return /* BgWhiteBright */40;
    case "bgYellow" : 
        return /* BgYellow */28;
    case "bgYellowBright" : 
        return /* BgYellowBright */36;
    case "black" : 
        return /* Black */9;
    case "blue" : 
        return /* Blue */13;
    case "blueBright" : 
        return /* BlueBright */21;
    case "bold" : 
        return /* Bold */1;
    case "cyan" : 
        return /* Cyan */15;
    case "cyanBright" : 
        return /* CyanBright */23;
    case "dim" : 
        return /* Dim */2;
    case "gray" : 
        return /* Gray */17;
    case "green" : 
        return /* Green */11;
    case "greenBright" : 
        return /* GreenBright */19;
    case "hidden" : 
        return /* Hidden */6;
    case "inverse" : 
        return /* Inverse */5;
    case "italic" : 
        return /* Italic */3;
    case "magenta" : 
        return /* Magenta */14;
    case "magentaBright" : 
        return /* MagentaBright */22;
    case "red" : 
        return /* Red */10;
    case "redBright" : 
        return /* RedBright */18;
    case "reset" : 
        return /* Reset */0;
    case "strikethrough" : 
        return /* Strikethrough */7;
    case "underline" : 
        return /* Underline */4;
    case "visible" : 
        return /* Visible */8;
    case "white" : 
        return /* White */16;
    case "whiteBright" : 
        return /* WhiteBright */24;
    case "yellow" : 
        return /* Yellow */12;
    case "yellowBright" : 
        return /* YellowBright */20;
    default:
      return /* Reset */0;
  }
}

function colorToString(c) {
  switch (c) {
    case 0 : 
        return "reset";
    case 1 : 
        return "bold";
    case 2 : 
        return "dim";
    case 3 : 
        return "italic";
    case 4 : 
        return "underline";
    case 5 : 
        return "inverse";
    case 6 : 
        return "hidden";
    case 7 : 
        return "strikethrough";
    case 8 : 
        return "visible";
    case 9 : 
        return "black";
    case 10 : 
        return "red";
    case 11 : 
        return "green";
    case 12 : 
        return "yellow";
    case 13 : 
        return "blue";
    case 14 : 
        return "magenta";
    case 15 : 
        return "cyan";
    case 16 : 
        return "white";
    case 17 : 
        return "gray";
    case 18 : 
        return "redBright";
    case 19 : 
        return "greenBright";
    case 20 : 
        return "yellowBright";
    case 21 : 
        return "blueBright";
    case 22 : 
        return "magentaBright";
    case 23 : 
        return "cyanBright";
    case 24 : 
        return "whiteBright";
    case 25 : 
        return "bgBlack";
    case 26 : 
        return "bgRed";
    case 27 : 
        return "bgGreen";
    case 28 : 
        return "bgYellow";
    case 29 : 
        return "bgBlue";
    case 30 : 
        return "bgMagenta";
    case 31 : 
        return "bgCyan";
    case 32 : 
        return "bgWhite";
    case 33 : 
        return "bgBlackBright";
    case 34 : 
        return "bgRedBright";
    case 35 : 
        return "bgGreenBright";
    case 36 : 
        return "bgYellowBright";
    case 37 : 
        return "bgBlueBright";
    case 38 : 
        return "bgMagentaBright";
    case 39 : 
        return "bgCyanBright";
    case 40 : 
        return "bgWhiteBright";
    
  }
}

var Helpers = /* module */[
  /* stringToColor */stringToColor,
  /* colorToString */colorToString
];

exports.colorify = colorify;
exports.Helpers = Helpers;
/* chalk Not a pure module */
